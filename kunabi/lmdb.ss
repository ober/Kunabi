(def (update-lmdb key val)
  (let* ((txn (lmdb-txn-begin env))
	 (bytes (lmdb-get txn db key))
	 (current (if bytes
		    (call-with-input-u8vector (uncompress bytes) read-json)
		    nil))
	 (new (if (table? current)
		(hash-put! current val #t)))
	 (final (compress (call-with-output-u8vector [] (cut write-json new <>)))))
    ;;(bytes (call-with-output-u8vector [] (cut write-json val <>)))
    ;; (bytes (compress bytes))
    (try
     (lmdb-put txn db key final)
     (lmdb-txn-commit txn)
     (catch (e)
       (lmdb-txn-abort txn)
       (raise e)))))

(def (db-get-lmdb key)
  (let (txn (lmdb-txn-begin env))
    (try
     (let* ((bytes (lmdb-get txn db key))
	    (val (if bytes
		   (call-with-input-u8vector (uncompress bytes) read-json)
		   nil)))
       (lmdb-txn-commit txn)
       val)
     (catch (e)
       (lmdb-txn-abort txn)
       (display e)
       (displayln "error kunabi-store-get: key:" key)
       ;;(raise e)
       ))))

(def (db-put-lmdb key val)
  (let* ((bytes (call-with-output-u8vector [] (cut write-json val <>)))
	 (bytes (compress bytes))
	 (txn (lmdb-txn-begin env)))
    (try
     (lmdb-put txn db key bytes)
     (lmdb-txn-commit txn)
     (catch (e)
       (lmdb-txn-abort txn)
       (raise e)))))
